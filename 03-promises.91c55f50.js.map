{"mappings":"qhBAuDE,IAAAA,EAAAC,EAAA,SAsBF,SAASC,EAAcC,EAAUC,GAY/B,OAXgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA7BEO,SAASC,cAAc,SAC/BC,iBAAiB,UAExB,SAAuBC,GACrBA,EAAMC,iBACN,MAAMC,EAAWF,EAAMG,cAAcD,SAC/BE,EAAaC,OAAOH,EAASI,KAAKC,OAClCC,EAAcH,OAAOH,EAASZ,MAAMiB,OACpCE,EAAeJ,OAAOH,EAASQ,OAAOH,OAC5C,IAAK,IAAII,EAAI,EAAGA,GAAKF,EAAcE,GAAK,EACtCvB,EAAcuB,EAAGP,GAAcO,EAAI,GAAKH,GACrCI,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MACjBuB,EAAA3B,GAAS4B,OAAOC,QAAQ,qBAAqB1B,QAAeC,MAAU,IAEvE0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBuB,EAAA3B,GAAS4B,OAAOG,QAAQ,oBAAoB5B,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["// import Notiflix from 'notiflix';\n\n// const form = document.querySelector('.form');\n// const startButton = document.querySelector('.form button');\n// const firstDelay = document.querySelector('[name=delay]');\n// const delayStep = document.querySelector('[name=step]');\n// const amount = document.querySelector('[name=amount]');\n\n// form.addEventListener('submit', onSubmitButton);\n\n// function onSubmitButton(event) {\n//   event.preventDefault();\n//   const firstDelayValue = Number(firstDelay.value);\n//   const delayStepValue = Number(delayStep.value);\n//   const amountValue = Number(amount.value);\n\n//   let delay = firstDelayValue - delayStepValue;\n\n//   for (let i = 1; i <= amountValue; i += 1) {\n//     delay += delayStepValue;\n//     createPromise(i, delay)\n//       .then(({ position, delay }) => { onFulfilled({ position, delay }) })\n//       .catch(({ position, delay }) => { onRejected({ position, delay }) });\n//  }\n// };\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n\n//   return new Promise((resolve, reject) => {\n\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         // Fulfill\n//         resolve({ position: position, delay: delay });\n//       }\n//       else {\n//         // Reject\n//         reject({ position: position, delay: delay });\n//       }\n//     }, delay);\n//   });\n// }\n\n// function onFulfilled({position,delay}) {\n//     Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n// }\n  \n//  function onRejected({position, delay}){\n//     Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   };\n\n\n  import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', onClickSubmit);\n\nfunction onClickSubmit(event) {\n  event.preventDefault();\n  const elements = event.currentTarget.elements;\n  const stepNumber = Number(elements.step.value);\n  const delayNumber = Number(elements.delay.value);\n  const amountNumber = Number(elements.amount.value);\n  for (let i = 1; i <= amountNumber; i += 1) {\n    createPromise(i, stepNumber * (i - 1) + delayNumber)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  // console.log('pos=', position, ' delay=', delay);\n  return promise;\n}"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","elements","currentTarget","stepNumber","Number","step","value","delayNumber","amountNumber","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.91c55f50.js.map"}